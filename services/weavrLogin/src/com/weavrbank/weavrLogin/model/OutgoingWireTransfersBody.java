/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.weavrbank.weavrLogin.model.OutgoingWireTransfersSourceInstrument;
/**
 * OutgoingWireTransfersBody
 */

public class OutgoingWireTransfersBody {
  @JsonProperty("profileId")
  private String profileId = null;

  @JsonProperty("transferAmount")
  private Object transferAmount = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("tag")
  private String tag = null;

  @JsonProperty("sourceInstrument")
  private OutgoingWireTransfersSourceInstrument sourceInstrument = null;

  @JsonProperty("destinationBeneficiary")
  private Object destinationBeneficiary = null;

  public OutgoingWireTransfersBody profileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * The Outgoing Wire Transfer Profile Id to be used to create the wire transfer transaction.  Profiles contain configuration and determine behavioral aspects of the newly created transaction, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product&#x27;s needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
   * @return profileId
  **/
  public String getProfileId() {
    return profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }

  public OutgoingWireTransfersBody transferAmount(Object transferAmount) {
    this.transferAmount = transferAmount;
    return this;
  }

   /**
   * Get transferAmount
   * @return transferAmount
  **/
  public Object getTransferAmount() {
    return transferAmount;
  }

  public void setTransferAmount(Object transferAmount) {
    this.transferAmount = transferAmount;
  }

  public OutgoingWireTransfersBody description(String description) {
    this.description = description;
    return this;
  }

   /**
   *  Transaction description.
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OutgoingWireTransfersBody tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * The tag field is a custom field that can be used to search and filter.
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public OutgoingWireTransfersBody sourceInstrument(OutgoingWireTransfersSourceInstrument sourceInstrument) {
    this.sourceInstrument = sourceInstrument;
    return this;
  }

   /**
   * Get sourceInstrument
   * @return sourceInstrument
  **/
  public OutgoingWireTransfersSourceInstrument getSourceInstrument() {
    return sourceInstrument;
  }

  public void setSourceInstrument(OutgoingWireTransfersSourceInstrument sourceInstrument) {
    this.sourceInstrument = sourceInstrument;
  }

  public OutgoingWireTransfersBody destinationBeneficiary(Object destinationBeneficiary) {
    this.destinationBeneficiary = destinationBeneficiary;
    return this;
  }

   /**
   * Get destinationBeneficiary
   * @return destinationBeneficiary
  **/
  public Object getDestinationBeneficiary() {
    return destinationBeneficiary;
  }

  public void setDestinationBeneficiary(Object destinationBeneficiary) {
    this.destinationBeneficiary = destinationBeneficiary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutgoingWireTransfersBody outgoing_wire_transfers_body = (OutgoingWireTransfersBody) o;
    return Objects.equals(this.profileId, outgoing_wire_transfers_body.profileId) &&
        Objects.equals(this.transferAmount, outgoing_wire_transfers_body.transferAmount) &&
        Objects.equals(this.description, outgoing_wire_transfers_body.description) &&
        Objects.equals(this.tag, outgoing_wire_transfers_body.tag) &&
        Objects.equals(this.sourceInstrument, outgoing_wire_transfers_body.sourceInstrument) &&
        Objects.equals(this.destinationBeneficiary, outgoing_wire_transfers_body.destinationBeneficiary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileId, transferAmount, description, tag, sourceInstrument, destinationBeneficiary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutgoingWireTransfersBody {\n");
    
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    sourceInstrument: ").append(toIndentedString(sourceInstrument)).append("\n");
    sb.append("    destinationBeneficiary: ").append(toIndentedString(destinationBeneficiary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
