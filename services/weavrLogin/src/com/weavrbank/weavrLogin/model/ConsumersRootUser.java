/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * The root user represents the identity.  Root users need to verify their email address and mobile number, as well as complete KYC, as part of the Consumer&#x27;s due diligence process. 
 */

public class ConsumersRootUser {
  @JsonProperty("occupation")
  private Object occupation = null;

  @JsonProperty("address")
  private Object address = null;

  @JsonProperty("surname")
  private String surname = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("mobile")
  private Mobile mobile = null;

  @JsonProperty("dateOfBirth")
  private Object dateOfBirth = null;

  @JsonProperty("email")
  private String email = null;

  public ConsumersRootUser occupation(Object occupation) {
    this.occupation = occupation;
    return this;
  }

   /**
   * Get occupation
   * @return occupation
  **/
  public Object getOccupation() {
    return occupation;
  }

  public void setOccupation(Object occupation) {
    this.occupation = occupation;
  }

  public ConsumersRootUser address(Object address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  public Object getAddress() {
    return address;
  }

  public void setAddress(Object address) {
    this.address = address;
  }

  public ConsumersRootUser surname(String surname) {
    this.surname = surname;
    return this;
  }

   /**
   * The last name of the root user.
   * @return surname
  **/
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }

  public ConsumersRootUser name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The first name of the root user.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConsumersRootUser mobile(Mobile mobile) {
    this.mobile = mobile;
    return this;
  }

   /**
   * Get mobile
   * @return mobile
  **/
  public Mobile getMobile() {
    return mobile;
  }

  public void setMobile(Mobile mobile) {
    this.mobile = mobile;
  }

  public ConsumersRootUser dateOfBirth(Object dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  public Object getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(Object dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public ConsumersRootUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Valid email address of the root user - this will be verified.
   * @return email
  **/
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumersRootUser consumers_rootUser = (ConsumersRootUser) o;
    return Objects.equals(this.occupation, consumers_rootUser.occupation) &&
        Objects.equals(this.address, consumers_rootUser.address) &&
        Objects.equals(this.surname, consumers_rootUser.surname) &&
        Objects.equals(this.name, consumers_rootUser.name) &&
        Objects.equals(this.mobile, consumers_rootUser.mobile) &&
        Objects.equals(this.dateOfBirth, consumers_rootUser.dateOfBirth) &&
        Objects.equals(this.email, consumers_rootUser.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(occupation, address, surname, name, mobile, dateOfBirth, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumersRootUser {\n");
    
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
