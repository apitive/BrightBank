/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ManagedAccountsBody
 */

public class ManagedAccountsBody {
  @JsonProperty("profileId")
  private String profileId = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("tag")
  private String tag = null;

  @JsonProperty("friendlyName")
  private String friendlyName = null;

  public ManagedAccountsBody profileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * The Managed Account Profile Id to be used to create the Managed Account.  Profiles contain configuration and determine behavioral aspects of the newly created Managed Account, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product&#x27;s needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
   * @return profileId
  **/
  public String getProfileId() {
    return profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }

  public ManagedAccountsBody currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The currency of the managed account.
   * @return currency
  **/
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public ManagedAccountsBody tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * The tag field is a custom field that can be used to search and filter.
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public ManagedAccountsBody friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

   /**
   * The friendly name to be given to the managed account.
   * @return friendlyName
  **/
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedAccountsBody managed_accounts_body = (ManagedAccountsBody) o;
    return Objects.equals(this.profileId, managed_accounts_body.profileId) &&
        Objects.equals(this.currency, managed_accounts_body.currency) &&
        Objects.equals(this.tag, managed_accounts_body.tag) &&
        Objects.equals(this.friendlyName, managed_accounts_body.friendlyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileId, currency, tag, friendlyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedAccountsBody {\n");
    
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
