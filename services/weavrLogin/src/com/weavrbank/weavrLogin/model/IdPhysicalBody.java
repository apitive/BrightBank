/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * IdPhysicalBody
 */

public class IdPhysicalBody {
  @JsonProperty("pin")
  private SensitivePin pin = null;

  @JsonProperty("deliveryMethod")
  private String deliveryMethod = null;

  @JsonProperty("deliveryAddress")
  private DeliveryAddress deliveryAddress = null;

  @JsonProperty("carrierType")
  private String carrierType = null;

  @JsonProperty("productReference")
  private String productReference = null;

  @JsonProperty("activationCode")
  private String activationCode = null;

  public IdPhysicalBody pin(SensitivePin pin) {
    this.pin = pin;
    return this;
  }

   /**
   * Get pin
   * @return pin
  **/
  public SensitivePin getPin() {
    return pin;
  }

  public void setPin(SensitivePin pin) {
    this.pin = pin;
  }

  public IdPhysicalBody deliveryMethod(String deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
    return this;
  }

   /**
   * Get deliveryMethod
   * @return deliveryMethod
  **/
  public String getDeliveryMethod() {
    return deliveryMethod;
  }

  public void setDeliveryMethod(String deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
  }

  public IdPhysicalBody deliveryAddress(DeliveryAddress deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Get deliveryAddress
   * @return deliveryAddress
  **/
  public DeliveryAddress getDeliveryAddress() {
    return deliveryAddress;
  }

  public void setDeliveryAddress(DeliveryAddress deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }

  public IdPhysicalBody carrierType(String carrierType) {
    this.carrierType = carrierType;
    return this;
  }

   /**
   * The carrier type to be used for this physical card.  This reference will be given to you once your physical card carrier has been set up. If only one carrier is configured, this field can be left empty. 
   * @return carrierType
  **/
  public String getCarrierType() {
    return carrierType;
  }

  public void setCarrierType(String carrierType) {
    this.carrierType = carrierType;
  }

  public IdPhysicalBody productReference(String productReference) {
    this.productReference = productReference;
    return this;
  }

   /**
   * The product design reference to be used for this physical card.  This reference will be given to you once your physical card programme has been set up. If only one card programme is configured, this field can be left empty. 
   * @return productReference
  **/
  public String getProductReference() {
    return productReference;
  }

  public void setProductReference(String productReference) {
    this.productReference = productReference;
  }

  public IdPhysicalBody activationCode(String activationCode) {
    this.activationCode = activationCode;
    return this;
  }

   /**
   * The unique code to be used to activate the physical card.
   * @return activationCode
  **/
  public String getActivationCode() {
    return activationCode;
  }

  public void setActivationCode(String activationCode) {
    this.activationCode = activationCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdPhysicalBody id_physical_body = (IdPhysicalBody) o;
    return Objects.equals(this.pin, id_physical_body.pin) &&
        Objects.equals(this.deliveryMethod, id_physical_body.deliveryMethod) &&
        Objects.equals(this.deliveryAddress, id_physical_body.deliveryAddress) &&
        Objects.equals(this.carrierType, id_physical_body.carrierType) &&
        Objects.equals(this.productReference, id_physical_body.productReference) &&
        Objects.equals(this.activationCode, id_physical_body.activationCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pin, deliveryMethod, deliveryAddress, carrierType, productReference, activationCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdPhysicalBody {\n");
    
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    deliveryMethod: ").append(toIndentedString(deliveryMethod)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    carrierType: ").append(toIndentedString(carrierType)).append("\n");
    sb.append("    productReference: ").append(toIndentedString(productReference)).append("\n");
    sb.append("    activationCode: ").append(toIndentedString(activationCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
