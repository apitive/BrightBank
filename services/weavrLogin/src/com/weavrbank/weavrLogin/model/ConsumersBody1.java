/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ConsumersBody1
 */

public class ConsumersBody1 {
  @JsonProperty("address")
  private Object address = null;

  @JsonProperty("occupation")
  private Object occupation = null;

  @JsonProperty("sourceOfFundsOther")
  private String sourceOfFundsOther = null;

  @JsonProperty("surname")
  private String surname = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("mobile")
  private Mobile mobile = null;

  @JsonProperty("dateOfBirth")
  private Object dateOfBirth = null;

  @JsonProperty("sourceOfFunds")
  private Object sourceOfFunds = null;

  @JsonProperty("tag")
  private String tag = null;

  @JsonProperty("feeGroup")
  private String feeGroup = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("baseCurrency")
  private String baseCurrency = null;

  public ConsumersBody1 address(Object address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  public Object getAddress() {
    return address;
  }

  public void setAddress(Object address) {
    this.address = address;
  }

  public ConsumersBody1 occupation(Object occupation) {
    this.occupation = occupation;
    return this;
  }

   /**
   * Get occupation
   * @return occupation
  **/
  public Object getOccupation() {
    return occupation;
  }

  public void setOccupation(Object occupation) {
    this.occupation = occupation;
  }

  public ConsumersBody1 sourceOfFundsOther(String sourceOfFundsOther) {
    this.sourceOfFundsOther = sourceOfFundsOther;
    return this;
  }

   /**
   * Description of source of funds in case &#x60;OTHER&#x60; was chosen.
   * @return sourceOfFundsOther
  **/
  public String getSourceOfFundsOther() {
    return sourceOfFundsOther;
  }

  public void setSourceOfFundsOther(String sourceOfFundsOther) {
    this.sourceOfFundsOther = sourceOfFundsOther;
  }

  public ConsumersBody1 surname(String surname) {
    this.surname = surname;
    return this;
  }

   /**
   * The last name of the Consumer root user.
   * @return surname
  **/
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }

  public ConsumersBody1 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The first name of the Consumer root user.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConsumersBody1 mobile(Mobile mobile) {
    this.mobile = mobile;
    return this;
  }

   /**
   * Get mobile
   * @return mobile
  **/
  public Mobile getMobile() {
    return mobile;
  }

  public void setMobile(Mobile mobile) {
    this.mobile = mobile;
  }

  public ConsumersBody1 dateOfBirth(Object dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  public Object getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(Object dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public ConsumersBody1 sourceOfFunds(Object sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
    return this;
  }

   /**
   * Get sourceOfFunds
   * @return sourceOfFunds
  **/
  public Object getSourceOfFunds() {
    return sourceOfFunds;
  }

  public void setSourceOfFunds(Object sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
  }

  public ConsumersBody1 tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * The tag field is a custom field that can be used to search and filter.
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public ConsumersBody1 feeGroup(String feeGroup) {
    this.feeGroup = feeGroup;
    return this;
  }

   /**
   * The fee group which the consumer will be bound to. Do not specify this if you are not using fee groups.
   * @return feeGroup
  **/
  public String getFeeGroup() {
    return feeGroup;
  }

  public void setFeeGroup(String feeGroup) {
    this.feeGroup = feeGroup;
  }

  public ConsumersBody1 email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email address of the Consumer root user.
   * @return email
  **/
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ConsumersBody1 baseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
    return this;
  }

   /**
   * The default currency of the consumer.
   * @return baseCurrency
  **/
  public String getBaseCurrency() {
    return baseCurrency;
  }

  public void setBaseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumersBody1 consumers_body_1 = (ConsumersBody1) o;
    return Objects.equals(this.address, consumers_body_1.address) &&
        Objects.equals(this.occupation, consumers_body_1.occupation) &&
        Objects.equals(this.sourceOfFundsOther, consumers_body_1.sourceOfFundsOther) &&
        Objects.equals(this.surname, consumers_body_1.surname) &&
        Objects.equals(this.name, consumers_body_1.name) &&
        Objects.equals(this.mobile, consumers_body_1.mobile) &&
        Objects.equals(this.dateOfBirth, consumers_body_1.dateOfBirth) &&
        Objects.equals(this.sourceOfFunds, consumers_body_1.sourceOfFunds) &&
        Objects.equals(this.tag, consumers_body_1.tag) &&
        Objects.equals(this.feeGroup, consumers_body_1.feeGroup) &&
        Objects.equals(this.email, consumers_body_1.email) &&
        Objects.equals(this.baseCurrency, consumers_body_1.baseCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, occupation, sourceOfFundsOther, surname, name, mobile, dateOfBirth, sourceOfFunds, tag, feeGroup, email, baseCurrency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumersBody1 {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    sourceOfFundsOther: ").append(toIndentedString(sourceOfFundsOther)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    sourceOfFunds: ").append(toIndentedString(sourceOfFunds)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    feeGroup: ").append(toIndentedString(feeGroup)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    baseCurrency: ").append(toIndentedString(baseCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
