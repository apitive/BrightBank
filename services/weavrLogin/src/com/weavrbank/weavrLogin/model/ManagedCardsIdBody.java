/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for our customers.   # Authentication Each request to the Multi API needs to be signed with an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `Authorization` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ManagedCardsIdBody
 */

public class ManagedCardsIdBody {
  @JsonProperty("deliveryAddress")
  private Object deliveryAddress = null;

  @JsonProperty("deliveryMethod")
  private Object deliveryMethod = null;

  @JsonProperty("tag")
  private String tag = null;

  @JsonProperty("billingAddress")
  private Object billingAddress = null;

  @JsonProperty("friendlyName")
  private String friendlyName = null;

  @JsonProperty("cardholderMobileNumber")
  private String cardholderMobileNumber = null;

  public ManagedCardsIdBody deliveryAddress(Object deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Get deliveryAddress
   * @return deliveryAddress
  **/
  public Object getDeliveryAddress() {
    return deliveryAddress;
  }

  public void setDeliveryAddress(Object deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }

  public ManagedCardsIdBody deliveryMethod(Object deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
    return this;
  }

   /**
   * Get deliveryMethod
   * @return deliveryMethod
  **/
  public Object getDeliveryMethod() {
    return deliveryMethod;
  }

  public void setDeliveryMethod(Object deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
  }

  public ManagedCardsIdBody tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Updates the tag field for the card. Leave blank if no change is needed.
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public ManagedCardsIdBody billingAddress(Object billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  public Object getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Object billingAddress) {
    this.billingAddress = billingAddress;
  }

  public ManagedCardsIdBody friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

   /**
   * Updates the friendly name of the card. Leave blank if no change is needed.
   * @return friendlyName
  **/
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }

  public ManagedCardsIdBody cardholderMobileNumber(String cardholderMobileNumber) {
    this.cardholderMobileNumber = cardholderMobileNumber;
    return this;
  }

   /**
   * The mobile number including country code of the card holder, needed in case a 3DS challenge is required.
   * @return cardholderMobileNumber
  **/
  public String getCardholderMobileNumber() {
    return cardholderMobileNumber;
  }

  public void setCardholderMobileNumber(String cardholderMobileNumber) {
    this.cardholderMobileNumber = cardholderMobileNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedCardsIdBody managed_cards_id_body = (ManagedCardsIdBody) o;
    return Objects.equals(this.deliveryAddress, managed_cards_id_body.deliveryAddress) &&
        Objects.equals(this.deliveryMethod, managed_cards_id_body.deliveryMethod) &&
        Objects.equals(this.tag, managed_cards_id_body.tag) &&
        Objects.equals(this.billingAddress, managed_cards_id_body.billingAddress) &&
        Objects.equals(this.friendlyName, managed_cards_id_body.friendlyName) &&
        Objects.equals(this.cardholderMobileNumber, managed_cards_id_body.cardholderMobileNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryAddress, deliveryMethod, tag, billingAddress, friendlyName, cardholderMobileNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedCardsIdBody {\n");
    
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    deliveryMethod: ").append(toIndentedString(deliveryMethod)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    cardholderMobileNumber: ").append(toIndentedString(cardholderMobileNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
