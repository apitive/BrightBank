package com.weavrbank.weavrLogin.service;


import com.weavrbank.weavrLogin.model.*;
import com.weavrbank.weavrLogin.model.Error;
import com.weavrbank.weavrLogin.model.InlineResponse2003;
import com.weavrbank.weavrLogin.model.InlineResponse4092;
import com.weavrbank.weavrLogin.model.OutgoingWireTransfer;
import com.weavrbank.weavrLogin.model.OutgoingWireTransfersBody;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.lang.Object;
import org.springframework.util.MultiValueMap;
import feign.*;

public interface OutgoingWireTransfersService {

  /**
   * Create outgoing wire transfer transaction
   * Transfers funds from managed accounts to an external bank account.  The Outgoing WireTransfer Profile (configured in the Multi Portal) specified determines the behaviour and restrictions of the transaction (for example, fees). 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return OutgoingWireTransfer
   */
  @RequestLine("POST /outgoing_wire_transfers")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  OutgoingWireTransfer outgoingWireTransferCreate(OutgoingWireTransfersBody body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get outgoing wire transfer transaction
   * Retrieves the outgoing wire transfer identified by the &#x60;id&#x60; path parameter.
    * @param id The unique identifier of the Outgoing Wire Transfer transaction. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return OutgoingWireTransfer
   */
  @RequestLine("GET /outgoing_wire_transfers/{id}")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  OutgoingWireTransfer outgoingWireTransferGet(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get outgoing wire transfer transactions
   * Retrieves all the outgoing wire transfer transactions performed by the logged-in identity.
    * @param profileId Filter by the outgoing wire transfer profile. Leave out to fetch all entries. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
    * @param paging The offset and number of results to return. Leave out to fetch the first page of results. (optional)
    * @param instrument Filter by the source instrument id (which must be a managed account). (optional)
    * @param state Filter by the outgoing wire transfer state. Leave out to fetch all states. (optional)
    * @param createdFrom Filter for outgoing wire transfer transactions created after &#x60;createdFrom&#x60; timestamp, expressed in Epoch timestamp using millisecond precision. Leave out to fetch all outgoing wire transfer transactions. (optional)
    * @param createdTo Filter for Outgoing Wire Transfer transactions created before &#x60;createdTo&#x60; timestamp, expressed in Epoch timestamp using millisecond precision. Leave out to fetch all outgoing wire transfer transactions. (optional)
    * @param tag Filter by the outgoing wire transfer tag. The exact tag must be provided, as wildcards are not supported. Leave out to fetch all entries. (optional)
   * @return InlineResponse2003
   */
  @RequestLine("GET /outgoing_wire_transfers?paging={paging}&profileId={profileId}&instrument={instrument}&state={state}&createdFrom={createdFrom}&createdTo={createdTo}&tag={tag}")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse2003 outgoingWireTransfersGet(@Param("profileId") String profileId, @Param("idempotency_ref") String idempotency_ref, @Param("paging") Object paging, @Param("instrument") Object instrument, @Param("state") List state, @Param("createdFrom") Long createdFrom, @Param("createdTo") Long createdTo, @Param("tag") String tag);


    /**
     * Get outgoing wire transfer transactions
     * Retrieves all the outgoing wire transfer transactions performed by the logged-in identity.
     * Note, this is equivalent to the other <code>outgoingWireTransfersGet</code> method,
     * but with the query parameters collected into a single Map parameter. This
     * is convenient for services with optional query parameters, especially when
     * used with the {@link OutgoingWireTransfersGetQueryParams} class that allows for
     * building up this map in a fluent style.
     * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
     * @param queryParams Map of query parameters as name-value pairs
     *   <p>The following elements may be specified in the query map:</p>
     *   <ul>
     *   <li>paging - The offset and number of results to return. Leave out to fetch the first page of results. (optional)</li>
     *   <li>profileId - Filter by the outgoing wire transfer profile. Leave out to fetch all entries. (required)</li>
     *   <li>instrument - Filter by the source instrument id (which must be a managed account). (optional)</li>
     *   <li>state - Filter by the outgoing wire transfer state. Leave out to fetch all states. (optional)</li>
     *   <li>createdFrom - Filter for outgoing wire transfer transactions created after &#x60;createdFrom&#x60; timestamp, expressed in Epoch timestamp using millisecond precision. Leave out to fetch all outgoing wire transfer transactions. (optional)</li>
     *   <li>createdTo - Filter for Outgoing Wire Transfer transactions created before &#x60;createdTo&#x60; timestamp, expressed in Epoch timestamp using millisecond precision. Leave out to fetch all outgoing wire transfer transactions. (optional)</li>
     *   <li>tag - Filter by the outgoing wire transfer tag. The exact tag must be provided, as wildcards are not supported. Leave out to fetch all entries. (optional)</li>
     *   </ul>
     * @return InlineResponse2003
     */
    @RequestLine("GET /outgoing_wire_transfers?paging={paging}&profileId={profileId}&instrument={instrument}&state={state}&createdFrom={createdFrom}&createdTo={createdTo}&tag={tag}")
    @Headers({
    "Accept: application/json",
        "idempotency-ref: {idempotency_ref}"    })
    InlineResponse2003 outgoingWireTransfersGet
    (@Param("idempotency_ref") String idempotency_ref, @QueryMap(encoded=true)
    MultiValueMap<String, String> queryParams);

}
