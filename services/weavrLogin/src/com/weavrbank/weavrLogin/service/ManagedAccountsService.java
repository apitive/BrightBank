package com.weavrbank.weavrLogin.service;


import com.weavrbank.weavrLogin.model.*;
import com.weavrbank.weavrLogin.model.Error;
import com.weavrbank.weavrLogin.model.InlineResponse20013;
import com.weavrbank.weavrLogin.model.InlineResponse40922;
import com.weavrbank.weavrLogin.model.InlineResponse40923;
import com.weavrbank.weavrLogin.model.InlineResponse40936;
import com.weavrbank.weavrLogin.model.InlineResponse40937;
import com.weavrbank.weavrLogin.model.InlineResponse40940;
import com.weavrbank.weavrLogin.model.InlineResponse40943;
import com.weavrbank.weavrLogin.model.ManagedAccount;
import com.weavrbank.weavrLogin.model.ManagedAccountIBAN;
import com.weavrbank.weavrLogin.model.ManagedAccountsBody;
import com.weavrbank.weavrLogin.model.ManagedAccountsIdBody;
import com.weavrbank.weavrLogin.model.Statement;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.lang.Object;
import org.springframework.util.MultiValueMap;
import feign.*;

public interface ManagedAccountsService {

  /**
   * Block managed account
   * Temporarily blocks a managed account.
    * @param id The unique identifier of the managed account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /managed_accounts/{id}/block")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void managedAccountBlock(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Create managed account
   * Creates a managed account for the consumer or corporate identity. The Managed Account Profile (configured in the Multi Portal) specified determines the behavior and restrictions that the managed account will have.\&quot; 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return ManagedAccount
   */
  @RequestLine("POST /managed_accounts")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  ManagedAccount managedAccountCreate(ManagedAccountsBody body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get managed account
   * Fetch the managed account identified by the &#x60;id&#x60; in path.
    * @param id The unique identifier of the Managed Account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return ManagedAccount
   */
  @RequestLine("GET /managed_accounts/{id}")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  ManagedAccount managedAccountGet(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get managed account IBAN
   * Fetch the IBAN details associated with the Managed Account identified by the &#x60;id&#x60; in the path.
    * @param id  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return ManagedAccountIBAN
   */
  @RequestLine("GET /managed_accounts/{id}/iban")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  ManagedAccountIBAN managedAccountIBANGet(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Remove managed account
   * Destroys the managed account identified by the &#x60;id&#x60; path parameter. Unlike block, this action is not reversible.  A managed account must be emptied from any remaining funds before it can be destroyed. 
    * @param id The unique identifier of the managed account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /managed_accounts/{id}/remove")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void managedAccountRemove(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get managed account statement
   * Returns a list of transactions against the managed account identified by the &#x60;id&#x60; path parameter, matching the criteria provided in the request.
    * @param id The unique identifier of the managed account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
    * @param accept A request parameter specifying the type of response the client would like. In case this is not specified or specified incorrectly, the default response type (application/json) will be used. (optional)
    * @param paging The offset and number of results to return. Leave out to fetch the first page of results. (optional)
    * @param orderByTimestamp Orders the result in ascending or descending order.   - ASC: Ascending order, oldest transactions first.   - DESC: Descending order, most recent transactions first.  If not specified, the transactions will be returned in descending order.  (optional)
    * @param fromTimestamp Filter for transactions having transaction timestamp after &#x60;fromTimestamp&#x60;. Timestamp is expressed in Epoch timestamp using millisecond precision. Leave out to fetch all managed accounts. (optional)
    * @param toTimestamp Filter for transactions having transaction timestamp before &#x60;toTimestamp&#x60;. Timestamp is expressed in Epoch timestamp using millisecond precision. Leave out to fetch all managed accounts. (optional)
    * @param showFundMovementsOnly Returns only the entries which contain fund movements. (optional)
   * @return Statement
   */
  @RequestLine("GET /managed_accounts/{id}/statement?paging={paging}&orderByTimestamp={orderByTimestamp}&fromTimestamp={fromTimestamp}&toTimestamp={toTimestamp}&showFundMovementsOnly={showFundMovementsOnly}")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}",

    "accept: {accept}"  })
  Statement managedAccountStatement(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref, @Param("accept") String accept, @Param("paging") Object paging, @Param("orderByTimestamp") String orderByTimestamp, @Param("fromTimestamp") Long fromTimestamp, @Param("toTimestamp") Long toTimestamp, @Param("showFundMovementsOnly") Boolean showFundMovementsOnly);


    /**
     * Get managed account statement
     * Returns a list of transactions against the managed account identified by the &#x60;id&#x60; path parameter, matching the criteria provided in the request.
     * Note, this is equivalent to the other <code>managedAccountStatement</code> method,
     * but with the query parameters collected into a single Map parameter. This
     * is convenient for services with optional query parameters, especially when
     * used with the {@link ManagedAccountStatementQueryParams} class that allows for
     * building up this map in a fluent style.
     * @param id The unique identifier of the managed account. (required)
     * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
     * @param accept A request parameter specifying the type of response the client would like. In case this is not specified or specified incorrectly, the default response type (application/json) will be used. (optional)
     * @param queryParams Map of query parameters as name-value pairs
     *   <p>The following elements may be specified in the query map:</p>
     *   <ul>
     *   <li>paging - The offset and number of results to return. Leave out to fetch the first page of results. (optional)</li>
     *   <li>orderByTimestamp - Orders the result in ascending or descending order.   - ASC: Ascending order, oldest transactions first.   - DESC: Descending order, most recent transactions first.  If not specified, the transactions will be returned in descending order.  (optional)</li>
     *   <li>fromTimestamp - Filter for transactions having transaction timestamp after &#x60;fromTimestamp&#x60;. Timestamp is expressed in Epoch timestamp using millisecond precision. Leave out to fetch all managed accounts. (optional)</li>
     *   <li>toTimestamp - Filter for transactions having transaction timestamp before &#x60;toTimestamp&#x60;. Timestamp is expressed in Epoch timestamp using millisecond precision. Leave out to fetch all managed accounts. (optional)</li>
     *   <li>showFundMovementsOnly - Returns only the entries which contain fund movements. (optional)</li>
     *   </ul>
     * @return Statement
     */
    @RequestLine("GET /managed_accounts/{id}/statement?paging={paging}&orderByTimestamp={orderByTimestamp}&fromTimestamp={fromTimestamp}&toTimestamp={toTimestamp}&showFundMovementsOnly={showFundMovementsOnly}")
    @Headers({
    "Accept: application/json",
        "idempotency-ref: {idempotency_ref}",

        "accept: {accept}"    })
    Statement managedAccountStatement
    (@Param("id") String id, @Param("idempotency_ref") String idempotency_ref, @Param("accept") String accept, @QueryMap(encoded=true)
    MultiValueMap<String, String> queryParams);

  /**
   * Unblock managed account
   * Unblocks the managed account identified by the &#x60;id&#x60; path parameter. The managed account must have &#x60;state.blockedReason&#x60; as &#x60;USER&#x60; so that it can be unblocked. If the managed account was blocked by &#x60;SYSTEM&#x60;, users cannot unblock it. 
    * @param id The unique identifier of the managed account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /managed_accounts/{id}/unblock")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void managedAccountUnblock(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Update managed account
   * Update the details for the managed account identified by the &#x60;id&#x60; in the path.
    * @param body  (required)
    * @param id The unique identifier of the managed account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return ManagedAccount
   */
  @RequestLine("PATCH /managed_accounts/{id}")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  ManagedAccount managedAccountUpdate(ManagedAccountsIdBody body, @Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get managed accounts
   * Retrieves all managed accounts belonging to the logged-in identity.
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
    * @param paging The offset and number of results to return. Leave out to fetch the first page of results. (optional)
    * @param profileId Filter by the managed account profile. Leave out to fetch all managed accounts. (optional)
    * @param friendlyName Filter by the managed account friendly name. Leave out to fetch all managed accounts.  The exact name must be provided, as wildcards are not supported.  (optional)
    * @param state  (optional)
    * @param state_blockedReason  (optional)
    * @param state_destroyedReason  (optional)
    * @param currency Filter by the managed account currency.  Currencies are expressed as an ISO 4217 code. Leave out to fetch all managed accounts.  (optional)
    * @param createdFrom Filter by the managed account creation date. Leave out to fetch all managed accounts. (optional)
    * @param createdTo Filter by the managed account created date. Leave out to fetch all managed accounts. (optional)
    * @param tag Filter by the managed account tag. The exact tag must be provided, as wildcards are not supported. Leave out to fetch all managed accounts. (optional)
   * @return InlineResponse20013
   */
  @RequestLine("GET /managed_accounts?paging={paging}&profileId={profileId}&friendlyName={friendlyName}&state={state}&state.blockedReason={state_blockedReason}&state.destroyedReason={state_destroyedReason}&currency={currency}&createdFrom={createdFrom}&createdTo={createdTo}&tag={tag}")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse20013 managedAccountsGet(@Param("idempotency_ref") String idempotency_ref, @Param("paging") Object paging, @Param("profileId") String profileId, @Param("friendlyName") String friendlyName, @Param("state") List state, @Param("state_blockedReason") List state_blockedReason, @Param("state_destroyedReason") List state_destroyedReason, @Param("currency") String currency, @Param("createdFrom") Long createdFrom, @Param("createdTo") Long createdTo, @Param("tag") String tag);


    /**
     * Get managed accounts
     * Retrieves all managed accounts belonging to the logged-in identity.
     * Note, this is equivalent to the other <code>managedAccountsGet</code> method,
     * but with the query parameters collected into a single Map parameter. This
     * is convenient for services with optional query parameters, especially when
     * used with the {@link ManagedAccountsGetQueryParams} class that allows for
     * building up this map in a fluent style.
     * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
     * @param queryParams Map of query parameters as name-value pairs
     *   <p>The following elements may be specified in the query map:</p>
     *   <ul>
     *   <li>paging - The offset and number of results to return. Leave out to fetch the first page of results. (optional)</li>
     *   <li>profileId - Filter by the managed account profile. Leave out to fetch all managed accounts. (optional)</li>
     *   <li>friendlyName - Filter by the managed account friendly name. Leave out to fetch all managed accounts.  The exact name must be provided, as wildcards are not supported.  (optional)</li>
     *   <li>state -  (optional)</li>
     *   <li>state_blockedReason -  (optional)</li>
     *   <li>state_destroyedReason -  (optional)</li>
     *   <li>currency - Filter by the managed account currency.  Currencies are expressed as an ISO 4217 code. Leave out to fetch all managed accounts.  (optional)</li>
     *   <li>createdFrom - Filter by the managed account creation date. Leave out to fetch all managed accounts. (optional)</li>
     *   <li>createdTo - Filter by the managed account created date. Leave out to fetch all managed accounts. (optional)</li>
     *   <li>tag - Filter by the managed account tag. The exact tag must be provided, as wildcards are not supported. Leave out to fetch all managed accounts. (optional)</li>
     *   </ul>
     * @return InlineResponse20013
     */
    @RequestLine("GET /managed_accounts?paging={paging}&profileId={profileId}&friendlyName={friendlyName}&state={state}&state.blockedReason={state_blockedReason}&state.destroyedReason={state_destroyedReason}&currency={currency}&createdFrom={createdFrom}&createdTo={createdTo}&tag={tag}")
    @Headers({
    "Accept: application/json",
        "idempotency-ref: {idempotency_ref}"    })
    InlineResponse20013 managedAccountsGet
    (@Param("idempotency_ref") String idempotency_ref, @QueryMap(encoded=true)
    MultiValueMap<String, String> queryParams);

  /**
   * Upgrade managed account with IBAN
   * Assign an IBAN to a Managed Account.  IBANs enable managed accounts to receive and send funds via wire transfers.  Assigning an IBAN to a Managed Account may be done asynchronously, in which case the &#x60;ManagedAccountIBAN.state&#x60; will be set to &#x60;PENDING_ALLOCATION&#x60; until bank details are ready to use. 
    * @param id The unique identifier of the Managed Account. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return ManagedAccountIBAN
   */
  @RequestLine("POST /managed_accounts/{id}/iban")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  ManagedAccountIBAN managedAccountsIBANUpgrade(@Param("id") String id, @Param("idempotency_ref") String idempotency_ref);

}
