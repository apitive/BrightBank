package com.weavrbank.weavrLogin.service;


import com.weavrbank.weavrLogin.model.*;
import com.weavrbank.weavrLogin.model.Corporate;
import com.weavrbank.weavrLogin.model.CorporatesBody;
import com.weavrbank.weavrLogin.model.CorporatesBody1;
import com.weavrbank.weavrLogin.model.EmailSendBody1;
import com.weavrbank.weavrLogin.model.EmailVerifyBody;
import com.weavrbank.weavrLogin.model.Error;
import com.weavrbank.weavrLogin.model.FeesChargeBody1;
import com.weavrbank.weavrLogin.model.InlineResponse200;
import com.weavrbank.weavrLogin.model.InlineResponse2001;
import com.weavrbank.weavrLogin.model.InlineResponse409;
import com.weavrbank.weavrLogin.model.InlineResponse40911;
import com.weavrbank.weavrLogin.model.InlineResponse40915;
import com.weavrbank.weavrLogin.model.InlineResponse40918;
import com.weavrbank.weavrLogin.model.InlineResponse40929;
import com.weavrbank.weavrLogin.model.InlineResponse4093;
import com.weavrbank.weavrLogin.model.InlineResponse40942;
import com.weavrbank.weavrLogin.model.InlineResponse4097;
import com.weavrbank.weavrLogin.model.MobileVerifyBody1;
import com.weavrbank.weavrLogin.model.VerificationMobileResponse;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.lang.Object;
import org.springframework.util.MultiValueMap;
import feign.*;

public interface CorporatesService {

  /**
   * Charge fee to corporate
   * Charge a fee to the corporate identified by the auth token, based on a pre-defined custom fee. Custom fees can be configured in the Multi Portal.  The fees collected will be deposited into your Revenue Account. The balance and transaction history of your revenue account can be viewed in the Multi Portal. 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /corporates/fees/charge")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void corporateChargeFee(FeesChargeBody1 body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Create corporate
   * Create a corporate identity for a business customer.  The information provided must be accurate and will be passed on for KYB verification with our partner.
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return Corporate
   */
  @RequestLine("POST /corporates")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  Corporate corporateCreate(CorporatesBody body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Get corporate
   * Retrieve the details of the logged-in corporate.
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return Corporate
   */
  @RequestLine("GET /corporates")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  Corporate corporateGet(@Param("idempotency_ref") String idempotency_ref);

  /**
   * Get corporate KYB
   * Returns the KYB status for the logged-in corporate.
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse200
   */
  @RequestLine("GET /corporates/kyb")
  @Headers({
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse200 corporateKybGet(@Param("idempotency_ref") String idempotency_ref);

  /**
   * Start corporate KYB
   * Corporates need to complete due diligence (KYB) before they can create instruments and perform transactions.  This operation initiates the due diligence process for the logged-in corporate.  Due Diligence is handled by a KYB provider - you will need to embed the KYB UI Component in your application so that the Corporate will be able to perform the KYB process.  To initialise the KYB UI Component, you need a &#x60;reference&#x60; that is given you in the response of this operation. 
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse2001
   */
  @RequestLine("POST /corporates/kyb")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse2001 corporateKybStart(@Param("idempotency_ref") String idempotency_ref);

  /**
   * Send root user email verification code
   * The first step in verifying a root user&#x27;s email. The root user whose email address is to be verified is sent an email containing a randomly generated code.  This code must then be provided in the _corporateRootUserEmailVerify_ operation to verify the root user&#x27;s email address.  Note that on the Sandbox Environment, emails are not sent and the verification code is always set to \\\&quot;123456\\\&quot;. 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /corporates/verification/email/send")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void corporateRootUserEmailVerificationCodeSend(EmailSendBody1 body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Verify root user email
   * The second step in verifying the root user&#x27;s email. The randomly generated code sent to the root user via email, using the _corporateRootUserEmailVerificationCodeSend_ operation, is submitted here to verify the root user&#x27;s email. This is needed as part of the verification process for basic due diligence. Note that on the Sandbox Environment, emails are not sent and the verification code is always set to \&quot;123456\&quot;.
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /corporates/verification/email/verify")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void corporateRootUserEmailVerify(EmailVerifyBody body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Send root user mobile verification code
   * The first step in verifying a root user&#x27;s mobile number. The root user whose mobile number is to be verified is sent a text message containing a randomly generated code.  This code must then be provided in the _corporateRootUserMobileVerify_ operation to verify the root user&#x27;s mobile number.  Note that on the Sandbox Environment, text messages are not sent and the verification code is always set to \\\&quot;123456\\\&quot;. 
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return VerificationMobileResponse
   */
  @RequestLine("POST /corporates/verification/mobile/send")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  VerificationMobileResponse corporateRootUserMobileVerificationCodeSend(@Param("idempotency_ref") String idempotency_ref);

  /**
   * Verify root user mobile
   * The second step in verifying the root user&#x27;s mobile number. The randomly generated code sent to the root user via text message, using the _corporateRootUserVerificationCodeSend_ operation, is to be submitted here to verify the root user&#x27;s mobile number.  This is needed as part of the verification process for basic due diligence.  Note that on the Sandbox Environment, text messages are not sent and the verification code is always set to \\\&quot;123456\\\&quot;. 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /corporates/verification/mobile/verify")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  void corporateRootUserMobileVerify(MobileVerifyBody1 body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Update corporate
   * Update the details of the logged-in corporate identity.  The following Corporate details are verified during due diligence (KYB) and cannot be updated via the API once the Corporate has been verified:   - Company Name   - Registration Number   - Registration Country   - Incorporation Date   - Root User Name   - Root User Surname   - Root User Email   - Root User Mobile Country Code   - Root User Mobile Number  *If these details change after due diligence is completed, please contact Customer Support to restart the Due Diligence process.* 
    * @param body  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations.  Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return Corporate
   */
  @RequestLine("PATCH /corporates")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  Corporate corporateUpdate(CorporatesBody1 body, @Param("idempotency_ref") String idempotency_ref);

}
